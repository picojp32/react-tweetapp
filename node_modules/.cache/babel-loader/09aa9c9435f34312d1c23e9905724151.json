{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan.picovsky/Desktop/react-project-2-picojp32/TweetApp/src/components/Tweet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport List from \"./List\";\nimport moment from \"moment\";\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tweet = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const maxLength = 141;\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [tweetData, setTweetData] = useState([]);\n\n  const textHandler = e => {\n    setText(e.target.value);\n  };\n\n  const userHandler = e => {\n    setUser(e.target.value);\n    localStorage.setItem(\"UserName\", user);\n  };\n\n  const handleClick = e => {\n    setIsLoading(true);\n    const tweetPostData = {\n      content: text,\n      userName: user,\n      date: moment().format()\n    };\n    const request = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(tweetPostData)\n    };\n    fetch(\"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\", request).then(response => response.json()).then(data => setTweetData([...tweetData, data]));\n    setText('');\n    setTimeout(() => {\n      window.location.reload();\n      setIsLoading(false);\n    }, [3000]);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\").then(response => {\n      response.json().then(data => {\n        setTweetData(data.tweets.filter(tweets => tweets.userName === user));\n      });\n    });\n    setIsLoading(false);\n  }, [user]);\n  useEffect(() => {\n    if (text.length < maxLength) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n\n    if (text.length >= maxLength) {\n      alert(\"The tweet can't contain more then 140 chars.\");\n    }\n  }, [text.length]);\n  useEffect(() => {\n    console.log(\"isLoading\", isLoading);\n  }, [isLoading]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"10\",\n      cols: \"70\",\n      name: \"text\",\n      className: \"tweet\",\n      value: text,\n      maxLength: maxLength,\n      placeholder: \"Enter tweet...\",\n      onInput: textHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      disabled: isDisabled,\n      type: \"submit\",\n      className: `submit-button submit-button-${isDisabled}`,\n      children: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"User Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"Text\",\n      value: user,\n      onInput: userHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onChange: setUser,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      tweetData: tweetData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tweet, \"+c1isrQK/DT6e9Jxef+W1rGn8Lo=\");\n\n_c = Tweet;\nexport default Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["/Users/jonathan.picovsky/Desktop/react-project-2-picojp32/TweetApp/src/components/Tweet.js"],"names":["React","useState","useEffect","List","moment","Loader","Tweet","text","setText","user","setUser","maxLength","isDisabled","setIsDisabled","isLoading","setIsLoading","tweetData","setTweetData","textHandler","e","target","value","userHandler","localStorage","setItem","handleClick","tweetPostData","content","userName","date","format","request","method","headers","body","JSON","stringify","fetch","then","response","json","data","setTimeout","window","location","reload","tweets","filter","length","alert","console","log"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from \"react\";\nimport \"../App.css\"\nimport List from \"./List\";\nimport moment from \"moment\";\nimport Loader from \"./Loader\"\n\nconst Tweet = () => {\n  const [text, setText] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const maxLength = 141;\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [tweetData, setTweetData] = useState([])\n\n  const textHandler = (e) => {\n    setText(e.target.value);\n  };\n\n  const userHandler = (e) => {\n    setUser(e.target.value);\n    localStorage.setItem(\"UserName\", user)\n  };\n\n  const handleClick = (e) => {\n    setIsLoading(true);\n    const tweetPostData = {\n      content: text,\n      userName: user,\n      date: moment().format(),\n    };\n\n    const request = {\n      method: 'POST',\n      headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      body: JSON.stringify(tweetPostData)  \n    };\n \n    fetch(\"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\", request)\n    .then(response => response.json())\n    .then(data => setTweetData([...tweetData,data]))\n    setText('');\n    setTimeout(()=>{\n      window.location.reload();\n      setIsLoading(false);\n    },[3000])\n\n  };\n\n  useEffect(() => {\n    setIsLoading(true); \n    fetch(\"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\")\n    .then((response) => {\n      response.json().then(data => {\n        setTweetData(data.tweets.filter(tweets => tweets.userName === user))\n         })\n    })\n    setIsLoading(false);\n  }, [user]); \n\n  useEffect(() => {\n    if (text.length < maxLength) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    } if (text.length >= maxLength){\n      alert(\"The tweet can't contain more then 140 chars.\") \n    }\n  }, [text.length]);\n\n  useEffect(() => {\n    console.log(\"isLoading\", isLoading);\n  }, [isLoading]);\n\n  return (\n    <form className=\"form-container\">\n      <textarea\n        rows='10'\n        cols='70'\n        name='text'\n        className='tweet'\n        value={text}\n        maxLength= {maxLength}\n        placeholder='Enter tweet...'\n        onInput={textHandler}\n      />\n   {!isLoading && (\n      <button\n        onClick={handleClick}\n        disabled={isDisabled}\n        type=\"submit\"\n        className={`submit-button submit-button-${isDisabled}`}>\n        Tweet\n      </button>\n    )}\n    {isLoading && <Loader />}\n      <div>\n        User Name:\n      </div>\n      <input\n        type=\"Text\"\n        value={user}\n        onInput={userHandler}\n      />\n      <button\n       onChange={setUser}\n      >\n        Submit\n      </button>    \n      <List\n        tweetData={tweetData}\n      />\n\n\n      </form>   \n  ); \n}\n\n\nexport default Tweet;"]},"metadata":{},"sourceType":"module"}