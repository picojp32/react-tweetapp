{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan.picovsky/Desktop/react-project-2-picojp32/TweetApp/src/components/Tweet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport moment from \"moment\";\nimport { serverReturn } from \"../lib/server\";\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tweet = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [user] = useState(\"user\");\n  const maxLength = 141;\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [tweetData, setTweetData] = useState({});\n\n  const textHandler = e => {\n    setText(e.target.value);\n  };\n\n  useEffect(() => {\n    setTweetData({\n      id: Math.floor(Math.random() * 1000),\n      content: user,\n      userName: text,\n      date: moment().format()\n    });\n  }, [user, text]);\n\n  const handleClick = () => {\n    setIsLoading(true);\n    serverReturn(tweetData, Request).then(response => response.json()).then(data => {\n      console.log(data);\n      setTweetData({});\n      setText(\"\");\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    if (text.length < maxLength) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n\n    if (text.length >= maxLength) {\n      alert(\"The tweet can't contain more then 140 chars.\");\n    }\n  }, [text.length]);\n  useEffect(() => {\n    if (tweetData.text) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [tweetData]);\n  useEffect(() => {\n    console.log(\"isLoading\", isLoading);\n  }, [isLoading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"10\",\n      cols: \"70\",\n      name: \"text\",\n      className: \"tweet\",\n      value: text,\n      maxLength: maxLength,\n      placeholder: \"Enter tweet...\",\n      onInput: textHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      disabled: isDisabled,\n      type: \"submit\",\n      className: `submit-button submit-button-${isDisabled}`,\n      children: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      tweetData: tweetData,\n      setTweetData: setTweetData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tweet, \"c1DNBE72F+mRM0vCM9kL3JH1oHI=\");\n\n_c = Tweet;\nexport default Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["/Users/jonathan.picovsky/Desktop/react-project-2-picojp32/TweetApp/src/components/Tweet.js"],"names":["React","useState","useEffect","List","moment","serverReturn","Loader","Tweet","text","setText","user","maxLength","isDisabled","setIsDisabled","isLoading","setIsLoading","tweetData","setTweetData","textHandler","e","target","value","id","Math","floor","random","content","userName","date","format","handleClick","Request","then","response","json","data","console","log","length","alert"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport moment from \"moment\";\nimport {serverReturn} from \"../lib/server\"\nimport Loader from \"./Loader\";\n\nconst Tweet = () => {\n  const [text, setText] = useState(\"\");\n  const [user] = useState(\"user\");\n  const maxLength = 141;\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [tweetData, setTweetData] = useState({});  \n\n  const textHandler = (e) => {\n    setText(e.target.value);\n  };\n\n  useEffect(() => {\n    setTweetData({\n        id: Math.floor(Math.random() * 1000),\n        content: user,\n        userName: text,\n        date: moment().format()\n  });\n}, [user,text]);\n    \n  const handleClick = () => {\n    setIsLoading(true);\n    serverReturn(tweetData, Request)\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(data);\n      setTweetData({})\n      setText(\"\")\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    if (text.length < maxLength) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    } if (text.length >= maxLength){\n      alert(\"The tweet can't contain more then 140 chars.\") \n    }\n  }, [text.length]);\n\n  useEffect(() => {\n    if (tweetData.text) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [tweetData]);\n\n\n  useEffect(() => {\n    console.log(\"isLoading\", isLoading);\n  }, [isLoading]);\n\n  return (\n    <div className=\"form-container\">\n      <textarea\n        rows='10'\n        cols='70'\n        name='text'\n        className='tweet'\n        value={text}\n        maxLength= {maxLength}\n        placeholder='Enter tweet...'\n        onInput={textHandler}\n      />\n   {!isLoading && (\n      <button\n        onClick={handleClick}\n        disabled={isDisabled}\n        type=\"submit\"\n        className={`submit-button submit-button-${isDisabled}`}>\n        Tweet\n      </button>\n    )}\n    {isLoading && <Loader />}\n      <List\n        tweetData={tweetData}\n        setTweetData={setTweetData}\n      />\n    </div>\n  );\n};\n\nexport default Tweet"]},"metadata":{},"sourceType":"module"}