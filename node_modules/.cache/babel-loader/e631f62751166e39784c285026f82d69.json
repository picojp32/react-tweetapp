{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan.picovsky/Desktop/react-project-2-picojp32/TweetApp/src/components/Tweet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport moment from \"moment\";\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tweet = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [user] = useState(\"Jonathan\");\n  const maxLength = 141;\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [tweetData, setTweetData] = useState([]);\n\n  const textHandler = e => {\n    setText(e.target.value);\n  };\n\n  const handleClick = e => {\n    setIsLoading(true);\n    const tweetPostData = {\n      content: text,\n      userName: user,\n      date: moment().format()\n    };\n    const request = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(tweetPostData)\n    };\n    fetch(\"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\", request).then(response => response.json()).then(data => setTweetData([...tweetData, data]));\n  };\n\n  useEffect(() => {\n    fetch(\"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\").then(response => response.json()).then(data => {\n      setTweetData(data.tweets.filter(tweets => tweets.userName === 'Jonathan'));\n      setIsLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (text.length < maxLength) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n\n    if (text.length >= maxLength) {\n      alert(\"The tweet can't contain more then 140 chars.\");\n    }\n  }, [text.length]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"10\",\n      cols: \"70\",\n      name: \"text\",\n      className: \"tweet\",\n      value: text,\n      maxLength: maxLength,\n      placeholder: \"Enter tweet...\",\n      onInput: textHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      disabled: isDisabled,\n      type: \"submit\",\n      className: `submit-button submit-button-${isDisabled}`,\n      children: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      tweetData: tweetData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tweet, \"H/QsCov3ruBxLsWPihRywciOEXg=\");\n\n_c = Tweet;\nexport default Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["/Users/jonathan.picovsky/Desktop/react-project-2-picojp32/TweetApp/src/components/Tweet.js"],"names":["React","useState","useEffect","List","moment","Loader","Tweet","text","setText","user","maxLength","isDisabled","setIsDisabled","isLoading","setIsLoading","tweetData","setTweetData","textHandler","e","target","value","handleClick","tweetPostData","content","userName","date","format","request","method","headers","body","JSON","stringify","fetch","then","response","json","data","tweets","filter","length","alert"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport moment from \"moment\";\nimport Loader from \"./Loader\"\n\nconst Tweet = () => {\n  const [text, setText] = useState(\"\");\n  const [user] = useState(\"Jonathan\");\n  const maxLength = 141;\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [tweetData, setTweetData] = useState([])\n\n  const textHandler = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleClick = (e) => {\n\n    setIsLoading(true); \n    \n    const tweetPostData = {\n      content: text,\n      userName: user,\n      date: moment().format(),\n    };\n  \n    const request = {\n      method: 'POST',\n      headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      body: JSON.stringify(tweetPostData)  \n    };\n \n    fetch(\"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\", request)\n    .then(response => response.json())\n    .then(data => setTweetData([...tweetData,data]))\n  };\n\n  useEffect(() => {\n    fetch(\"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\")\n    .then(response => response.json())\n    .then(data => {\n      setTweetData(data.tweets.filter(tweets => tweets.userName === 'Jonathan'))\n    setIsLoading(false); \n\n    });\n  }, [])\n      \n\n  useEffect(() => {\n    if (text.length < maxLength) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    } if (text.length >= maxLength){\n      alert(\"The tweet can't contain more then 140 chars.\") \n    }\n  }, [text.length]);\n\n  return (\n    <form className=\"form-container\">\n      <textarea\n        rows='10'\n        cols='70'\n        name='text'\n        className='tweet'\n        value={text}\n        maxLength= {maxLength}\n        placeholder='Enter tweet...'\n        onInput={textHandler}\n      />\n   {!isLoading && (\n      <button\n        onClick={handleClick}\n        disabled={isDisabled}\n        type=\"submit\"\n        className={`submit-button submit-button-${isDisabled}`}>\n        Tweet\n      </button>\n    )}\n    {isLoading && <Loader />}\n      <List\n        tweetData={tweetData}\n      />\n    </form>   \n  ); \n}\n\n\nexport default Tweet;"]},"metadata":{},"sourceType":"module"}