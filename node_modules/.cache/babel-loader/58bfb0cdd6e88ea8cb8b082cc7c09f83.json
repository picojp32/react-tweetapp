{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan.picovsky/Desktop/react-project-2-picojp32/TweetApp/src/components/Tweet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport \"../App.css\";\nimport List from \"./List\";\nimport moment from \"moment\";\nimport AppContext from \"../context/AppContext\";\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tweet = props => {\n  _s();\n\n  const appContext = useContext(AppContext);\n\n  const textHandler = e => {\n    appContext.setText(e.target.value);\n  };\n\n  const handleClick = e => {\n    appContext.setIsLoading(true);\n    const tweetPostData = {\n      content: appContext.text,\n      userName: props.user,\n      date: moment().format()\n    };\n    const request = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(tweetPostData)\n    };\n    fetch(\"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\", request).then(response => response.json()).then(data => appContext.setTweetData([...appContext.tweetData, data]));\n    appContext.setText('');\n    setTimeout(() => {\n      // window.location.reload()\n      appContext.setIsLoading(false);\n    }, [500]);\n  };\n\n  useEffect(() => {\n    appContext.setIsLoading(true);\n    fetch(\"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\").then(response => {\n      response.json().then(data => {\n        localStorage.getItem(\"profileName\", props.user);\n        appContext.setTweetData(data.tweets.filter(tweets => tweets.userName === props.user));\n      });\n    });\n    appContext.setIsLoading(false);\n  }, [appContext, appContext.user, props.user]);\n  useEffect(() => {\n    if (appContext.text.length < appContext.maxLength) {\n      appContext.setIsDisabled(false);\n    } else {\n      appContext.setIsDisabled(true);\n    }\n\n    if (appContext.text.length >= appContext.maxLength) {\n      alert(\"The tweet can't contain more then 140 chars.\");\n    }\n  }, [appContext]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"10\",\n      cols: \"100\",\n      name: \"text\",\n      className: \"tweet\",\n      value: appContext.text,\n      maxLength: appContext.maxLength,\n      placeholder: \"Enter tweet...\",\n      onInput: textHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), !appContext.isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      disabled: appContext.isDisabled,\n      type: \"submit\",\n      className: `submit-button submit-button-${appContext.isDisabled}`,\n      children: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), appContext.isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      tweetData: appContext.tweetData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tweet, \"A+uIc7vvFMmNEoRZlQlMUAhgSOg=\");\n\n_c = Tweet;\nexport default Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["/Users/jonathan.picovsky/Desktop/react-project-2-picojp32/TweetApp/src/components/Tweet.js"],"names":["React","useContext","useEffect","List","moment","AppContext","Loader","Tweet","props","appContext","textHandler","e","setText","target","value","handleClick","setIsLoading","tweetPostData","content","text","userName","user","date","format","request","method","headers","body","JSON","stringify","fetch","then","response","json","data","setTweetData","tweetData","setTimeout","localStorage","getItem","tweets","filter","length","maxLength","setIsDisabled","alert","isLoading","isDisabled"],"mappings":"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","sourcesContent":["import React,{ useContext, useEffect } from \"react\";\nimport \"../App.css\"\nimport List from \"./List\";\nimport moment from \"moment\";\nimport AppContext from \"../context/AppContext\";\nimport Loader from \"./Loader\"\n\nconst Tweet = (props) => {\n  const appContext = useContext(AppContext);\n\n  const textHandler = (e) => {\n    appContext.setText(e.target.value);\n  };\n\n  const handleClick = (e) => {\n    appContext.setIsLoading(true);\n    const tweetPostData = {\n      content: appContext.text,\n      userName: props.user,\n      date: moment().format(),\n    };\n\n    const request = {\n      method: 'POST',\n      headers: \n        {\n          \"Content-Type\": \"application/json\",\n        },\n      body: JSON.stringify(tweetPostData)  \n    };\n \n    fetch(\"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\", request)\n    .then(response => response.json())\n    .then(data => appContext.setTweetData([...appContext.tweetData,data]))\n    appContext.setText('');\n    setTimeout(()=>{\n      // window.location.reload()\n      appContext.setIsLoading(false);\n    },[500])\n  };\n\n  useEffect(() => {\n    appContext.setIsLoading(true); \n    fetch(\"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\")\n    .then((response) => {\n      response.json().then(data => {\n        localStorage.getItem(\"profileName\",props.user)\n        appContext.setTweetData(data.tweets.filter(tweets => tweets.userName === props.user))\n         })\n    })\n    appContext.setIsLoading(false);\n  }, [appContext, appContext.user, props.user]);\n   \n\n  useEffect(() => {\n    if (appContext.text.length < appContext.maxLength) {\n      appContext.setIsDisabled(false);\n    } else {\n      appContext.setIsDisabled(true);\n    } if (appContext.text.length >= appContext.maxLength){\n      alert(\"The tweet can't contain more then 140 chars.\") \n    }\n  }, [appContext]);\n\n  return (\n\n    <form className=\"form-container\">\n      <textarea\n        rows='10'\n        cols='100'\n        name='text'\n        className='tweet'\n        value={appContext.text}\n        maxLength= {appContext.maxLength}\n        placeholder='Enter tweet...'\n        onInput={textHandler}\n      />\n   {!appContext.isLoading && (\n      <button\n        onClick={handleClick}\n        disabled={appContext.isDisabled}\n        type=\"submit\"\n        className={`submit-button submit-button-${appContext.isDisabled}`}>\n        Tweet\n      </button>\n    )}\n    {appContext.isLoading && <Loader />}\n      <List\n        tweetData={appContext.tweetData}\n      />\n    </form>   \n  ); \n}\n\n\nexport default Tweet;"]},"metadata":{},"sourceType":"module"}